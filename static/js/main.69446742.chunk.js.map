{"version":3,"sources":["images/logo.svg","components/Tips.jsx","components/InputsPanel.jsx","components/Calculator.jsx","App.js","reportWebVitals.js","index.js"],"names":["initialChecked","radioChecked","Tips","updateTip","useState","tip","setTip","tipCustom","setTipCustom","checked","setChecked","handleRadio","e","value","Number","target","console","log","className","type","name","id","onChange","htmlFor","placeholder","min","initialData","bill","tipP","people","initialNewData","tipPerson","total","InputsPanel","setDb","reset","data","setData","newData","setNewData","useEffect","totalAmount","tipPerPerson","toFixed","totalPerPerson","initialDb","Calculator","db","setReset","onClick","Date","now","App","src","logo","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.69446742.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.3cc0528b.svg\";","import React, { useState } from \"react\";\r\n\r\nconst initialChecked = {\r\n  5: false,\r\n  10: false,\r\n  15: true,\r\n  25: false,\r\n  50: false,\r\n};\r\n\r\nconst radioChecked = {\r\n  5: false,\r\n  10: false,\r\n  15: false,\r\n  25: false,\r\n  50: false,\r\n};\r\n\r\nconst Tips = ({ updateTip }) => {\r\n  const [tip, setTip] = useState(15);\r\n  const [tipCustom, setTipCustom] = useState(\"\");\r\n  const [checked, setChecked] = useState(initialChecked);\r\n\r\n  const handleChange = (e) => {\r\n    let value = Number(e.target.value);\r\n    setTipCustom(value);\r\n    updateTip(value);\r\n    setChecked(radioChecked);\r\n  };\r\n\r\n  const handleRadio = (e) => {\r\n    let value = Number(e.target.value);\r\n    setTip(value);\r\n    console.log(tip);\r\n    setTipCustom(\"\");\r\n    setChecked({ ...radioChecked, [value]: true });\r\n    updateTip(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3 className=\"margin\">Select Tip %</h3>\r\n      <div className=\"radio-grid\">\r\n        <input\r\n          type=\"radio\"\r\n          name=\"tip\"\r\n          id=\"5p\"\r\n          value={5}\r\n          checked={checked[5]}\r\n          onChange={handleRadio}\r\n        />\r\n        <label htmlFor=\"5p\">5%</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"tip\"\r\n          id=\"10p\"\r\n          value={10}\r\n          checked={checked[10]}\r\n          onChange={handleRadio}\r\n        />\r\n        <label htmlFor=\"10p\">10%</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"tip\"\r\n          id=\"15p\"\r\n          value={15}\r\n          checked={checked[15]}\r\n          onChange={handleRadio}\r\n        />\r\n        <label htmlFor=\"15p\">15%</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"tip\"\r\n          id=\"25p\"\r\n          value={25}\r\n          checked={checked[25]}\r\n          onChange={handleRadio}\r\n        />\r\n        <label htmlFor=\"25p\">25%</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"tip\"\r\n          id=\"50p\"\r\n          value={50}\r\n          checked={checked[50]}\r\n          onChange={handleRadio}\r\n        />\r\n        <label htmlFor=\"50p\">50%</label>\r\n        <input\r\n          type=\"number\"\r\n          name=\"tipCustom\"\r\n          id=\"tipCustom\"\r\n          placeholder=\"Custom\"\r\n          min={0}\r\n          onChange={handleChange}\r\n          value={tipCustom}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tips;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Tips from \"./Tips\";\r\n\r\nconst initialData = {\r\n  bill: 0,\r\n  tipP: 15,\r\n  people: 1,\r\n};\r\n\r\nconst initialNewData = {\r\n  tipPerson: 0,\r\n  total: 0,\r\n};\r\n\r\nconst InputsPanel = ({ setDb, reset }) => {\r\n  const [data, setData] = useState(initialData);\r\n  const [newData, setNewData] = useState(initialNewData);\r\n\r\n  useEffect(() => {\r\n    setDb(newData);\r\n  }, [newData]);\r\n  // console.log(newData);\r\n\r\n  useEffect(() => {\r\n    setData(initialData);\r\n  }, [reset]);\r\n\r\n  useEffect(() => {\r\n    // console.log(data);\r\n\r\n    let { bill, tipP, people } = data;\r\n\r\n    let tip = (bill * tipP) / 100,\r\n      totalAmount = bill + tip;\r\n    let newData = {};\r\n\r\n    if (people > 0) {\r\n      newData = {\r\n        tipPerPerson: (tip / people).toFixed(2),\r\n        totalPerPerson: (totalAmount / people).toFixed(2),\r\n      };\r\n    } else {\r\n      newData = {\r\n        tipPerPerson: 0,\r\n        totalPerPerson: 0,\r\n      };\r\n    }\r\n\r\n    setNewData(newData);\r\n  }, [data]);\r\n\r\n  const updateBill = (e) => {\r\n    let bill = Number(e.target.value);\r\n    setData({\r\n      ...data,\r\n      bill,\r\n    });\r\n  };\r\n\r\n  const updateTip = (tipP) => {\r\n    setData({\r\n      ...data,\r\n      tipP,\r\n    });\r\n  };\r\n\r\n  const updatePeople = (e) => {\r\n    let people = Number(e.target.value);\r\n    setData({\r\n      ...data,\r\n      people,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"panel\">\r\n      {/* Bill */}\r\n      <div>\r\n        <h3>Bill</h3>\r\n        <div className=\"input\">\r\n          <span>$</span>\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"0\"\r\n            min={0}\r\n            onChange={updateBill}\r\n            value={data.bill}\r\n          />\r\n        </div>\r\n      </div>\r\n      {/* Tip percentage */}\r\n      <Tips updateTip={updateTip} />\r\n      {/* Number of People */}\r\n      <div>\r\n        <h3>Number of People</h3>\r\n        {data.people === 0 && <span className=\"error-msg\">Can't be zero</span>}\r\n        <div className=\"input\">\r\n          <span>$</span>\r\n          <input\r\n            className={data.people === 0 ? \"error\" : \"\"}\r\n            type=\"number\"\r\n            placeholder=\"0\"\r\n            min={0}\r\n            onChange={updatePeople}\r\n            value={data.people}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputsPanel;\r\n","import React, { useState } from \"react\";\r\nimport InputsPanel from \"./InputsPanel\";\r\n\r\nconst initialDb = {\r\n  tipPerPerson: 1,\r\n  totalPerPerson: 1,\r\n};\r\n\r\nconst Calculator = () => {\r\n  const [db, setDb] = useState(initialDb);\r\n  const [reset, setReset] = useState(null);\r\n\r\n  const handleReset = () => {\r\n    setReset(Date.now());\r\n  };\r\n\r\n  return (\r\n    <div className=\"calculator\">\r\n      <InputsPanel setDb={setDb} reset={reset} />\r\n      <div className=\"results-cont\">\r\n        <div className=\"results\">\r\n          <div className=\"total\">\r\n            <div className=\"text\">\r\n              <h2>Tip Amount</h2>\r\n              <span>/ person</span>\r\n            </div>\r\n            <p>${db.tipPerPerson}</p>\r\n          </div>\r\n          <div className=\"total\">\r\n            <div className=\"text\">\r\n              <h2>Total</h2>\r\n              <span>/ person</span>\r\n            </div>\r\n            <p>${db.totalPerPerson}</p>\r\n          </div>\r\n        </div>\r\n\r\n        <button className=\"reset\" onClick={handleReset}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import logo from \"./images/logo.svg\";\nimport \"./App.css\";\nimport Calculator from \"./components/Calculator\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}